// Function - scope, default, values, declaration vs expression

const log = console.log;

// ------- Function Declaration vs Function Expression ---------

// Function Declaration
greeting(); // —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–æ –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
// –ø–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–Ω–∞—á–∞–ª–∞ javaScript —á–∏—Ç–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã —Å–æ —Å–ª–æ–≤–æ–º function
// –ø–æ—ç—Ç–æ–º—É —Ç–∞–∫ –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–æ —ë—ë –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –∞ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è 
// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, —Ç–æ —Å –Ω–∞—á–∞–ª–∞ javaScript —á–∏—Ç–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã —Å–æ —Å–ª–æ–≤–æ–º function
function greeting() {
  log('Hello World!');
}

// greeting();

// Function Expression

// greetingFn(); –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ –µ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç
// –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è greetingFn –æ–±—ä—è–≤–ª–µ–Ω–∞ –≤ –≤–∏–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ JS —á–∏—Ç–∞–µ—Ç —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
// –ø–æ—ç—Ç–æ–º—É —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç 

const greetingFn = function greeting() { // —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
  log('Hello Function Expression');
}

greetingFn();

// -------------- Scope (–æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏) -----------------

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ (global scope)
const num1 = 10;

{
  // —Ç—É—Ç —É–∂–µ –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
  const num2 = 20;
  log(num1); // 10 // —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ª–æ–∫–∞–ª—å–Ω—ã–π scope –≤–∏–¥–∏—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π
  log(num2); // 20 // —Å—Ä–∞–±–æ—Ç–∞–µ—Ç , –∞ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç

  var num3 = 100; // var - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ 
}

log(num3); // 100 // —Å—Ä–∞–±–æ—Ç–∞–µ—Ç // var - –≤—Å–µ–≥–¥–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, –≥–¥–µ –±—ã –æ–Ω –Ω–µ –Ω–∞—Ö–æ–¥–∏–ª—Å—è

log(num1);
// log(num2); // error // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç

function showScopeExample() {
  const num4 = 1000;
  log('showScopeExample', num1, num4);

  function nestedFn() { // –≤–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    const num5 = 3000;
    log('showScopeExample', num4, num5);
  }
  nestedFn();
}

showScopeExample(); 
// nestedFn(); // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
// log(num4); // —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç , –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏

// ----------- Default values - –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ---------------

// function formatGreeting(name, emoji = 'üëΩ') {
//   log(`Hello ${ name } ${ emoji }`);
// }

function formatGreeting(name, emoji = 'üëΩ') {
  return `Hello ${ name } ${ emoji }`;
}

// formatGreeting('Artem', 'üôÇ');
// formatGreeting('Artem');

log(formatGreeting('Artem', 'üôÇ')); // Hello Artem üôÇ
log(formatGreeting('Artem')); // Hello Artem üëΩ

// —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ 
const formattedGreeting = formatGreeting('Artem', 'üëäüëäüëäüëäüëä');
log(formattedGreeting); // Hello Artem üëäüëäüëäüëäüëä

// function expression 

const formattedGreeting2 = formatGreeting;
log(formattedGreeting2('Artem', 'ü§òü§òü§òü§òü§òü§òü§òü§òü§òü§ò')); // Hello Artem ü§òü§òü§òü§òü§òü§òü§òü§òü§òü§ò