// –°—Ç—Ä–æ–∫–∏ JS, –ú–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫, –®–∞–±–ª–æ–Ω–∏–∑–∞—Ü–∏—è, –Æ–Ω–∏–∫–æ–¥
// Strings (—Å—Ç—Ä–æ–∫–∏)

const log = console.log;

let str = 'Hello World!'; // Hello World!
str = 'Hello \nWorld!'; // Hello // –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
                        // World!
str = 'Hello \'World!\''; // Hello 'World!'
str = 'üëç'; // üëç
str = String.fromCodePoint(128077); // üëç // 128077 - –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –∏–∑ UTF-32BE

str = 'U+1F44D'; // U+1F44D // –º—ã —é–Ω–∏–∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ –∏ –≤—Å—Ç–∞–≤–∏–ª–∏ —Å—é–¥–∞, –Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç
str = '\u{1F44D}'; // üëç // —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –≤–º–µ—Å—Ç–æ U+ —è –ø–æ—Å—Ç–∞–≤–∏–ª \u –∏ –¥–∞–ª–µ–µ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏
// –µ—Å–ª–∏ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –º–µ–Ω—å—à–µ –ø—è—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ –±–µ–∑ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫

const copyRight = '\u00A9'; // ¬©

log(str);
log(copyRight);

// ------------------------------------
const filePath = String.raw`C:\Development\profile\aboutMe.html`; // –º–µ—Ç–æ–¥ raw –ø–∏—à–µ–º —Ç–∞–∫ raw``, –∞ –Ω–µ —Ç–∞–∫ raw() 

log(filePath); // C:\Development\profile\aboutMe.html

// ------------------------------------

const firstName = 'Anna';
str = `Hello ${ firstName }`; // Hello Anna

str = `User:
  - Alex
  - Nik
  - Julia
  - Margarita
`;

// –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç —Ç–∞–∫–æ–π:
/* 
User:
  - Alex
  - Nik
  - Julia
  - Margarita 
*/

log(str);

// ------------------------------------
let text = 'World';

log(text.length); // 5 // –î–ª–∏–Ω–∞ —Å–∏–º–≤–æ–ª–æ–≤
log(text.toUpperCase()); // WORLD // –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä 
log(text.toLowerCase()); // world // –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
log(text.repeat(3)); // WorldWorldWorld // –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è —Ç—Ä–∏ —Ä–∞–∑–∞

// –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤ –æ—Ç—á–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω—É–ª—è
log(text[0]); // W
log(text[1]); // o
log(text[3]); // l

log(text.at(3)); // l // —Ç—É—Ç –æ—Ç—á–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–æ–∂–µ —Å 0, 

let me = 'I am ' + text.at(1) + text.at(3) + text.at(4); // I am old
me = `I am ${ text.at(1) }${ text.at(3) }${ text.at(4) }`; // I am old

log(me);

// –º–µ—Ç–æ–¥—ã charAt() –∏ at() - –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –Ω–æ at() –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏

// ------------------------------------

str = '    JavaScript is awesome       ';

str = str.trim(); // JavaScript is awesome // —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å–ª–µ–≤–∞ –∏ —Å –ø—Ä–∞–≤–∞
str = str.trimEnd(); // JavaScript is awesome // —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
str = str.trimStart(); // JavaScript is awesome // —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
log(str);

log(str.replace('Script', '')); // Java is awesome
log(str.replace('Script', '----')); // Java---- is awesome

log(str.indexOf('S')); // 4
log(str.indexOf('Script')); // 4
log(str.indexOf('Java')); // 0
log(str.indexOf('W')); // -1

str = 'JavaScript is awesome';

if (str.indexOf('Java')) { // 0 // falsy –∑–Ω–∞—á–µ–Ω–∏–µ (false)
  log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞');
}
// –≤ —Å —É—Å–ª–æ–≤–∏—è—Ö —Å indexOf –≤—Å–µ–≥–¥–∞ –¥–µ–ª–∞–µ–º –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ !== -1 // —ç—Ç–æ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
if (str.indexOf('Java') !== -1) { // 0 –Ω–µ —Ä–∞–≤–Ω—è–µ—Ç—Å—è -1 // true // —É—Å–ª–æ–≤–∏–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
  log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞');
}

// ------------------------------------

log(str); // JavaScript is awesome
log(str.includes('is')); // true // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç boolean –∑–Ω–∞—á–µ–Ω–∏–µ // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ 
log(str.startsWith('Java')); // true // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å Java?
log(str.endsWith('Java')); // false // —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å–æ —Å–ª–æ–≤–æ–º Java
log(str.endsWith('some')); // true // —Ç–∞–∫ –∫–∞–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å–æ —Å–ª–æ–≤–æ–º some

// ------------------------------------
// substring, slice, substr (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥)

// substring(start, end)
// slice(start, end)
// substr(start, length)

str = 'hardcore';

log(str.substring(0, 4)); // 'hard' // –ø–æ–¥—Ä–µ–∑–∞–µ—Ç —Å–ª–æ–≤–∞ // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É
log(str.substring(4)); // 'core'
log(str.substring(8, 4)); // 'core' // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ—Ç –Ω–∞ (4, 8)

log(str.slice(0, 4)); // 'hard'
log(str.slice(8, 4)); // —Ç—É—Ç –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–º // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞

log(str.substr(8, 4)); // —Ç—É—Ç –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–º // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
log(str.substr(1, 3)); // 'ard'

// ------------------------------------

let random = 'abc';

log(random.padStart('10', '0')); // 0000000abc
// padStart('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤', '–∫–∞–∫–∏–µ —Å–∏–º–≤–æ–ª—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å')
log(random.padStart('10', '0').length); // 10

log(random.padEnd('10', '0')); // abc0000000
log(random.padEnd('13', Math.random())); // abc0.59506270
