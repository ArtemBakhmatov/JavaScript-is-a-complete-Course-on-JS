// Function - callbacks, iife, arrow functions

const log = console.log;

function greeting() {
  log('Hello my friends!');
}

function showGreeting(callback) {
  callback();
}

showGreeting(greeting); // greeting –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ —Å—Å—ã–ª–∫—É

// ----------------------

function getInfo(name, age) {
  return `Name: ${ name }; Age: ${ age }`;
}

function getInfoWithCurrentDate(callback) { 
  const now = new Date();

  log(`Today: ${ now.toISOString() } \n ${ callback('Artem', 37) }`);
}

getInfoWithCurrentDate(getInfo);

// callback -> –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ —Ç–∞–∫ cb (–æ–Ω —Ç–æ–∂–µ –º–æ–∂–µ—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö)

// --------------------------------------------

function survey(question, agreedFn, disagreedFn) { // –æ–ø—Ä–æ—Å(–∑–∞–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç, –æ—Ç–≤–µ—Ç)
  if (confirm(question)) {
    agreedFn();
  } else {
    disagreedFn();
  }
}

survey(
  '–¢—ã –º–æ–π –¥—Ä—É–≥!',
  function () { log('–¢—ã —Å–æ–≥–ª–∞—Å–∏–ª—Å—è, —á—Ç–æ —Ç—ã –º–æ–π –¥—Ä—É–≥!üòÄ')},
  function () { log('–¢—ã –Ω–∞ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è, –ø–æ–ª—É—á–∞–µ—Ç—Å—è —á—Ç–æ —Ç—ã –Ω–µ –¥—Ä—É–≥!üò°')}
);


// ---------- –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (arrow functions) ----------

const sum = (a, b) => {
  return a + b;
}

log(sum(3, 5)); // 8

const multiplication = (a, b) => a * b; // —Ç—É—Ç —É–∂–µ –µ—Å—Ç—å return –≤–Ω—É—Ç—Ä–∏ –µ—Å–ª–∏ –ø–∏—à–µ–º –±–µ–∑ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫

log(multiplication(3, 5)); // 15

const showName = name => `Name: ${ name }`;

log(showName('Artem'));

// -------------- IIFE -----------------
// –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è 
// Immediately-invoked function expressions 

(
  function () {
    var message = 'Hello!';
    log(message);
  }
)();

// log(message); // —Ç—É—Ç –º—ã –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É, —Ç–∞–∫ —Ä–∞–Ω—å—à–µ –¥–µ–ª–∞–ª–∏ —á—Ç–æ–±—ã var –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –≥–ª–æ–±–∞–ª—å–Ω—É—é 
// –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, (—Ç—É—Ç –ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é)(), —Ç.–µ. —Ç–∞–∫–∏–º –º–µ—Ç–æ–¥–æ–º –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ var

(
  function (name) {
    var message = 'Hello!';
    log(message, name); // Hello! Anna
  }
)('Anna'); 

// Call Stack (–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤)

/* 
function one() {
  log('One');
}

function two() {
  log('Two');
}

function three() {
  log('Three');
}

// —Ç—É—Ç –≤—Å—ë –≤—ã–∑–æ–≤–µ—Ç—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É
one();
two();
three(); 
*/

function one() {
  log('One');
  two();
}

function two() {
  log('Two');
  three();
}

function three() {
  log('Three');
}

one();
// –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç —Ç–∞–∫–æ–π:
// One
// Two
// Three

